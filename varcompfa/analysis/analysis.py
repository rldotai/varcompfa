"""
Functions for analyzing and working with data generated by experiments.
"""
import numpy as np
import itertools


##############################################################################
# Data handling
##############################################################################
def calculate_return(rewards, gamma):
    """Calculate return from a list of rewards and gamma, which may be a sequence or a constant."""
    ret = []
    g = 0
    # Allow for gamma to be specified as a sequence or a constant
    if not hasattr(gamma, '__iter__'):
        gamma = itertools.repeat(gamma)
    # Work backwards through the
    for r, gm in reversed(list(zip(rewards, gamma))):
        g *= gm
        g += r
        ret.append(g)
    # inverse of reverse
    ret.reverse()
    return np.array(ret)

def squared_error(a, b):
    """Return the squared difference between sequences `a` and `b`."""
    a = np.array(a)
    b = np.array(b)
    return np.sum((a - b)**2)

def mse(a, b):
    a = np.array(a)
    b = np.array(b)
    return np.mean((a - b)**2)
